{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$schemaVersion": "0.0.1",
  "$id": "https://smart-data-models.github.io/dataModel.SmartDataModels/Attribute/schema.json",
  "title": "Smart Data Models - SmartDataModels / Attribute",
  "description": "Description of the data model Attribute ",
  "modelTags": "",
  "derivedFrom": "",
  "license": "https://smart-data-models.github.io/dataModel.SmartDataModels/Attribute/LICENSE.md",
  "type": "object",
  "allOf": [
    {
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Attribute"
          ],
          "description": "Property. It must be equal to `ThreePhaseAcMeasurement`."
        },
        "_id": {
          "type": "string",
          "description": "Property. Identifier of the item given from mongodb by default"
        },
        "id": {
          "type": "string",
          "description": "Property. Designed identifier of the attribute in the format of its context plus the version number, such as https://smartdatamodels.org/dataModel.EnergyCIM/WindGenType4IEC/address/addressLocality#0.0.1"
        },
        "parentId": {
          "type": "string",
          "description": "Property. Identifier of the parent attribute of the current one if it has any"
        },
        "context": {
          "type": "string",
          "description": "Property. Context url of the attribute"
        },
        "parentContext": {
          "type": "string",
          "description": "Property. Id of the parent attribute of the current one if it has any"
        },
         "subpropertiesContext": {
          "type": "array",
          "description": "Property. Id of the subattributes of the current one if it has any",
           "items": {
             "type": "string",
             "description": "Property. Every id of the subattributes of the current one if it has any"
           }
        },
        "property": {
          "type": "string",
          "description": "Property. Name of the attribute"
        },
        "dataModel": {
          "type": "string",
          "description": "Property. The data model this attribute belongs to"
        },
        "repoName": {
          "type": "string",
          "description": "Property. The subject this attribute belongs to"
        },
        "description": {
          "type": "string",
          "description": "Property. Textual description of the attribute"
        },
        "typeNGSI": {
          "type": "string",
          "description": "Property. Whether it is a Property, GeoProperty, or Relationship according to the NGSI standard. Other types could be as well"
        },
         "modelTags": {
          "type": "string",
          "description": "Property. Tags of the data model"
        },
         "license": {
          "type": "string",
          "description": "Property. Link to the license for the data model"
        },
         "schemaVersion": {
          "type": "string",
          "description": "Property. Version of the data model"
        },
         "dataType": {
          "type": "string",
          "description": "Property. Json schema basic data type, boolean, integer, number, string, object or array"
        },
         "model": {
          "type": "string",
          "description": "Property. Optional descriptor pointing to the semantic source of the attribute"
        },
         "units": {
          "type": "string",
          "description": "Property. Optional descriptor with the units. Preferably in UNECE format"
        },
         "format": {
          "type": "string",
          "description": "Property. Either date, or time, or date-time, or URI, etc the format of the attribute according to the definitions in json schema"
        }
      }
    }
  ],
  "required": [
    "id",
    "type"
  ]
}
